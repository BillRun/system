[
	{
		"description": "Record an offline refund for a customer",
		"test_id": 1,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "tc",
			"amount": "15",
			"payments": [
				{
					"dir": "tc",
					"amount": "15",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"dir": "tc"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15
			}
		],
		"testRailId": 530
	}
	, {
		"description": "Record an offline payment from a customer",
		"test_id": 2,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "15",
			"payments": [
				{
					"dir": "fc",
					"amount": "15",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"dir": "fc"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 15
			}
		],
		"testRailId": 531
	}
	, {
		"description": "Record an offline payment from a customer, <br>when the charge date of the customer debt is on future",
		"test_id": 3,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "23.4",
			"payments": [
				{
					"dir": "fc",
					"amount": "23.4",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": 1,
					"step": 1,
					"cdrs": [
						{
							"aid": 1,
							"sid": 0,
							"rate": "CALL",
							"credit_time": "2021-04-18T17:17:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": 20
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"dir": "fc",
					"due": -23.4
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 23.4,
				"due": -23.4,
				"left": 0
			}
		],
		"testRailId": 532
	}
	, {
		"description": "Pay customer debt by record an offline payment from a customer",
		"test_id": 4,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "15",
			"payments": [
				{
					"dir": "fc",
					"amount": "15",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"dir": "fc",
					"due": -15
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			}
		],
		"testRailId": 533
	}
	, {
		"description": "customer pays part of his debt by record an offline payment",
		"test_id": 5,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "10",
			"payments": [
				{
					"dir": "fc",
					"amount": "10",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": -10,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 5
			}
		],
		"testRailId": 534
	}
	, {
		"description": "custom has debt  about 15 ,10 is already paid, and the  customer want to pay the remaining amount by record bill by an offline payment",
		"test_id": 6,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "5",
			"payments": [
				{
					"dir": "fc",
					"amount": "5",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "10",
					"payments": [
						{
							"dir": "fc",
							"amount": "10",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": -10,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": -5,
				"left": 0
			}
		],
		"testRailId": 535
	}
	, {
		"description": "customer is overpaid by record an offline payment , the offline payment  amount is big then customer's total debt",
		"test_id": 7,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "20",
			"payments": [
				{
					"dir": "fc",
					"amount": "20",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"left": 5
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0
			}
		],
		"testRailId": 536
	}
	, {
		"description": "Record an offline refund for a customer, the customer has an overpayment,and the record refund is big then his overpay",
		"test_id": 8,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "tc",
			"amount": "20",
			"payments": [
				{
					"dir": "tc",
					"amount": "20",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": 20,
				"left_to_pay": 5
			}
		],
		"testRailId": 537
	}
	, {
		"description": "The customer deposits an amount for future payment",
		"test_id": 9,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "20",
			"payments": [
				{
					"dir": "fc",
					"amount": "20",
					"aid": "1",
					"sid": "0",
					"deposit": "true"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 0,
				"due": 0,
				"deposit": "true",
				"deposit_amount": 20,
				"left": 0
			}
		],
		"testRailId": 538
	}
	, {
		"description": "A customer with a debt , deposits an amount",
		"test_id": 10,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "20",
			"payments": [
				{
					"dir": "fc",
					"amount": "20",
					"aid": "1",
					"sid": "0",
					"deposit": "true"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 0,
				"due": 0,
				"deposit": "true",
				"deposit_amount": 20,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15
			}
		],
		"testRailId": 539
	}
	, {
		"description": "the customer unfreeze his freez deposits",
		"test_id": 11,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "20",
					"payments": [
						{
							"dir": "fc",
							"amount": "20",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 20
			}
		],
		"testRailId": 540
	}
	, {
		"description": "pay customer debt by unfreeze the customer's deposit bills",
		"test_id": 12,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": true
			}
		],
		"testRailId": 541
	}
	, {
		"description": "pay customer debt by unfreeze the customer's deposit bills the deposits amount is big then customer debt",
		"test_id": 13,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "20",
					"payments": [
						{
							"dir": "fc",
							"amount": "20",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 5
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": true
			}
		],
		"testRailId": 542
	}
	, {
		"description": "pay customer debt  by unfreeze the customer's deposit bills , the deposits amount is less then customer debt",
		"test_id": 14,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "20",
					"payments": [
						{
							"dir": "tc",
							"amount": "20",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": 20,
				"left_to_pay": 5,
				"total_paid": 15,
				"paid": false
			}
		],
		"testRailId": 543
	}
	, {
		"description": "pay 2 debt  bills  by unfreeze the customer's deposit bills",
		"test_id": 15,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						},
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "30",
					"payments": [
						{
							"dir": "fc",
							"amount": "30",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 30,
				"due": -30,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": true
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": true
			}
		],
		"testRailId": 544
	}
	, {
		"description": "pay part of 2 debt  bills  by unfreeze the customer's deposit bills, each invoice amount is 15 and the deposit amount is 20",
		"test_id": 16,
		"api": "pay",
		"params": {
			"aid": "1",
			"action": "use_deposit",
			"txid": {
				"query": {
					"aid": 1,
					"deposit": "true"
				},
				"type": "array"
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						},
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "20",
					"payments": [
						{
							"dir": "fc",
							"amount": "20",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"deposit": "true",
				"deposit_amount": 0,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": true
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 10,
				"total_paid": 5,
				"paid": false
			}
		],
		"testRailId": 545
	}
	, {
		"description": "customer has freeze deposit,and he record an offline refund",
		"test_id": 17,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "tc",
			"amount": "15",
			"payments": [
				{
					"dir": "tc",
					"amount": "15",
					"aid": "1",
					"sid": "0"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "20",
					"payments": [
						{
							"dir": "fc",
							"amount": "20",
							"aid": "1",
							"deposit": "true"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 0,
				"due": 0,
				"deposit": "true",
				"deposit_amount": 20,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false
			}
		],
		"testRailId": 546
	}
	, {
		"description": "customer split his full debt (the debt is from one bill)into 3 installments  ,first due date & charge date are transferred ,and they with same values  ",
		"test_id": 18,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"first_due_date": {
				"date": {
					"date": "next month",
					"format": "Y-m-t"
				}
			},
			"first_charge_date": {
				"date": {
					"date": "next month",
					"format": "Y-m-t"
				}
			},
			"installments_num": "3"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": "1"
			},
			{
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15,
				"payment_agreement.first_due_date": {
					"date": {
						"date": "next month",
						"format": "Y-m-t"
					}
				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "+1 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			}
		],
		"testRailId": 547
	}
	, {
		"description": "customer split his full bill into 3 installments, first due date & charge date are NOT transferred  ",
		"test_id": 19,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments_num": "3"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": "1"
			},
			{
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15,
				"payment_agreement.first_due_date": {
					"date": {
						"date": "now",
						"format": "Y-m-t"
					}
				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "now",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"charge.not_before": {
					"date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 5,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 15
			}
		],
		"testRailId": 548
	}
	, {
		"description": "customer debt is 15 , he want to split 14 to  3 installments, first due date & charge date are NOT transferred",
		"test_id": 20,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "14",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments_num": "3"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 1,
				"total_paid": 14,
				"paid": false
			},
			{
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 14,
				"due": -14,
				"left": 0,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 14,
				"payment_agreement.first_due_date": {
					"date": {
						"date": "now",
						"format": "Y-m-t"
					}
				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 6,
				"due": 6,
				"charge.not_before": {
					"date": {
						"date": "now",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 6,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 14
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 4,
				"due": 4,
				"charge.not_before": {
					"date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 4,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 14
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 4,
				"due": 4,
				"charge.not_before": {
					"date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					}
				},
				"left_to_pay": 4,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3,
				"payment_agreement.installments_num": 3,
				"payment_agreement.total_amount": 14
			}
		],
		"testRailId": 549
	}
	, {
		"description": "customer split his bill into 3 installments, the amount is big then customer total debt, first due date & charge date are NOT transferred",
		"test_id": 21,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "20",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments_num": "3"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Passed amount is bigger than the customer debt"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false
			}
		],
		"testRailId": 550
	}
	, {
		"description": "customer split his full bill into 3 installments, installment array is transferred, first due date & charge date are NOT transferred .",
		"test_id": 22,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 3,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 2,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 10,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3
			}
		],
		"testRailId": 551
	}
	, {
		"description": "customer split his full bill into 1 installments ,installment array is transferred, first due date & charge date are NOT transferred",
		"test_id": 23,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 15
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1
			}
		],
		"testRailId": 552
	}
	, {
		"description": "customer split his full bill into 3 installments , installment array is transferred + apply both first due date & charge date (conflict).",
		"test_id": 24,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			],
			"first_due_date": {
				"date": {
					"date": "next month",
					"format": "Y-m-d"
				}
			},
			"first_charge_date": {
				"date": {
					"date": "next month",
					"format": "Y-m-d"
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Passed parameters in contradiction"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": "0"
			}
		],
		"testRailId": 553
	}
	, {
		"description": "customer split his full bill into 3 installments ,installment array is transferred  and the amount ,field is big then the total of amounts in the installments array",
		"test_id": 25,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "50",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Sum of amounts in installments array must be equal to total amount"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": "0"
			}
		],
		"testRailId": 554
	}
	, {
		"description": "customer split his full bill into 3 installments ,installment array is transferred  and the amount ,field is lass then the total of amounts in the installments array",
		"test_id": 26,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "5",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Sum of amounts in installments array must be equal to total amount"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": "0"
			}
		],
		"testRailId": 555
	}
	, {
		"description": "customer split his full bill into 3 installments ,installment array is transferred and the amount field is NOT transferred",
		"test_id": 27,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Sum of amounts in installments array must be equal to total amount"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": "0"
			}
		],
		"testRailId": 556
	}
	, {
		"description": "customer split his full bill into 3 installments ,note parameter is transferred ",
		"test_id": 28,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"note": "b\"la ,.'@$&bla bla",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"note": "b\"la ,.'@$&bla bla"
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"note": "b\"la ,.'@$&bla bla"
			}
		],
		"testRailId": 557
	}
	, {
		"description": "customer split his full bill into 3 installments ,and add additional for the each installment  (uf  parameter is transferred in each installment) ",
		"test_id": 29,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3,
					"uf": {
						"credit_type": "leumi1",
						"payer_address": "blabla1"
					}
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2,
					"uf": {
						"credit_type": "leumi2",
						"payer_address": "blabla2"
					}
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10,
					"uf": {
						"credit_type": "leumi3",
						"payer_address": "blabla3"
					}
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"paid": false
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 3,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1,
				"uf.credit_type": "leumi1",
				"uf.payer_address": "blabla1"
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 2,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2,
				"uf.credit_type": "leumi2",
				"uf.payer_address": "blabla2"
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 10,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3,
				"uf.credit_type": "leumi3",
				"uf.payer_address": "blabla3"
			}
		],
		"testRailId": 558
	}
	, {
		"description": "customer split his full debt into 3 installments ,the customer debt is from 2 invoices each of them with amount 15",
		"test_id": 30,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "installment_agreement",
			"action": "split_bill",
			"installments": [
				{
					"due_date": {
						"date": "+ 1 month",
						"format": "Y-m-t"
					},
					"amount": 3
				},
				{
					"due_date": {
						"date": "+ 2 month",
						"format": "Y-m-t"
					},
					"amount": 2
				},
				{
					"due_date": {
						"date": "+ 3 month",
						"format": "Y-m-t"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "10",
					"payments": [
						{
							"dir": "tc",
							"amount": "10",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "5",
					"payments": [
						{
							"dir": "tc",
							"amount": "5",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"total_paid": 10,
				"paid": "1"
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"total_paid": 5,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 3,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 1
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 2,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 2
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 10,
				"total_paid": 0,
				"paid": false,
				"payment_agreement.installment_index": 3
			}
		],
		"testRailId": 559
	}
	, {
		"description": "customer merge his installments into one installment ",
		"test_id": 31,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "merge_installments",
			"action": "merge_installments",
			"split_bill_id": {
				"query": {
					"aid": 1,
					"payment_agreement": {
						"$exists": 1
					},
					"pays": {
						"$exists": 1
					}
				}
			},
			"due_date": {
				"date": {
					"date": "+ 1 month",
					"format": "Y-m-t"
				}
			},
			"first_charge_date": {
				"date": {
					"date": "+ 1 month",
					"format": "Y-m-t"
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"dir": "tc",
					"amount": "15",
					"method": "installment_agreement",
					"action": "split_bill",
					"installments": [
						{
							"due_date": {
								"date": "+ 1 month",
								"format": "Y-m-t"
							},
							"amount": 3
						},
						{
							"due_date": {
								"date": "+ 2 month",
								"format": "Y-m-t"
							},
							"amount": 2
						},
						{
							"due_date": {
								"date": "+ 3 month",
								"format": "Y-m-t"
							},
							"amount": 10
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"pays": [],
				"left": 0,
				"payment_agreement": {

				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 0,
				"total_paid": 3,
				"vatable_left_to_pay": 0,
				"paid": "1",
				"payment_agreement.installment_index": 1
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 0,
				"total_paid": 2,
				"vatable_left_to_pay": 0,
				"paid": "1",
				"payment_agreement.installment_index": 2
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 0,
				"total_paid": 10,
				"vatable_left_to_pay": 0,
				"paid": "1",
				"payment_agreement.installment_index": 3
			},
			{
				"dir": "fc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"pays": [],
				"left": 0
			},
			{
				"dir": "tc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"bills_merged": [],
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			}
		],
		"testRailId": 560
	}
	, {
		"description": "customer merge his installments into one installment one of them is already paid",
		"test_id": 32,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "12",
			"method": "merge_installments",
			"action": "merge_installments",
			"split_bill_id": {
				"query": {
					"aid": 1,
					"payment_agreement": {
						"$exists": 1
					},
					"pays": {
						"$exists": 1
					}
				}
			},
			"due_date": {
				"date": {
					"date": "+ 1 month",
					"format": "Y-m-t"
				}
			},
			"first_charge_date": {
				"date": {
					"date": "+ 1 month",
					"format": "Y-m-t"
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"dir": "tc",
					"amount": "15",
					"method": "installment_agreement",
					"action": "split_bill",
					"installments": [
						{
							"due_date": {
								"date": "+ 1 month",
								"format": "Y-m-t"
							},
							"amount": 3
						},
						{
							"due_date": {
								"date": "+ 2 month",
								"format": "Y-m-t"
							},
							"amount": 2
						},
						{
							"due_date": {
								"date": "+ 3 month",
								"format": "Y-m-t"
							},
							"amount": 10
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "3",
					"payments": [
						{
							"dir": "fc",
							"amount": "3",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"vatable_left_to_pay": 0,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"pays": [],
				"left": 0,
				"payment_agreement": {

				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 0,
				"total_paid": 3,
				"paid": "1",
				"payment_agreement.installment_index": 1
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 0,
				"total_paid": 2,
				"paid": "1",
				"payment_agreement.installment_index": 2
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 0,
				"total_paid": 10,
				"paid": "1",
				"payment_agreement.installment_index": 3
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": -3,
				"left": 0
			},
			{
				"dir": "fc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 12,
				"due": -12,
				"pays": [],
				"left": 0
			},
			{
				"dir": "tc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 12,
				"due": 12,
				"bills_merged": [],
				"left_to_pay": 12,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			}
		],
		"testRailId": 561
	}
	, {
		"description": "customer merge his installments into one installment, the first_charge_date isn't transferred  ",
		"test_id": 33,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "15",
			"method": "merge_installments",
			"action": "merge_installments",
			"split_bill_id": {
				"query": {
					"aid": 1,
					"payment_agreement": {
						"$exists": 1
					},
					"pays": {
						"$exists": 1
					}
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"dir": "tc",
					"amount": "15",
					"method": "installment_agreement",
					"action": "split_bill",
					"installments": [
						{
							"due_date": {
								"date": "+ 1 month",
								"format": "Y-m-t"
							},
							"amount": 3
						},
						{
							"due_date": {
								"date": "+ 2 month",
								"format": "Y-m-t"
							},
							"amount": 2
						},
						{
							"due_date": {
								"date": "+ 3 month",
								"format": "Y-m-t"
							},
							"amount": 10
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testMergeBillDueDate": {
					"payment_agreement.installment_index": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 562
	}
	, {
		"description": "customer merge his installments into one installment, the first_charge_date isn't transferred,and the first installment is already paid",
		"test_id": 34,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"dir": "tc",
			"amount": "12",
			"method": "merge_installments",
			"action": "merge_installments",
			"split_bill_id": {
				"query": {
					"aid": 1,
					"payment_agreement": {
						"$exists": 1
					},
					"pays": {
						"$exists": 1
					}
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"dir": "tc",
					"amount": "15",
					"method": "installment_agreement",
					"action": "split_bill",
					"installments": [
						{
							"due_date": {
								"date": "+ 1 month",
								"format": "Y-m-t"
							},
							"amount": 3
						},
						{
							"due_date": {
								"date": "+ 2 month",
								"format": "Y-m-t"
							},
							"amount": 2
						},
						{
							"due_date": {
								"date": "+ 3 month",
								"format": "Y-m-t"
							},
							"amount": 10
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "3",
					"payments": [
						{
							"dir": "fc",
							"amount": "3",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testMergeBillDueDate": {
					"payment_agreement.installment_index": 2
				}
			},
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"vatable_left_to_pay": 0,
				"paid": "1"
			},
			{
				"dir": "fc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"pays": [],
				"left": 0,
				"payment_agreement": {

				}
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": 3,
				"left_to_pay": 0,
				"total_paid": 3,
				"paid": "1",
				"payment_agreement.installment_index": 1
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 2,
				"due": 2,
				"left_to_pay": 0,
				"total_paid": 2,
				"paid": "1",
				"payment_agreement.installment_index": 2
			},
			{
				"dir": "tc",
				"method": "installment_agreement",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"left_to_pay": 0,
				"total_paid": 10,
				"paid": "1",
				"payment_agreement.installment_index": 3
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 3,
				"due": -3,
				"left": 0
			},
			{
				"dir": "fc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 12,
				"due": -12,
				"pays": [],
				"left": 0
			},
			{
				"dir": "tc",
				"method": "merge_installments",
				"aid": 1,
				"type": "rec",
				"amount": 12,
				"due": 12,
				"bills_merged": [],
				"left_to_pay": 12,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			}
		],
		"testRailId": 563
	}
	, {
		"description": "Record an offline payment from a customer, method of payment is cheque",
		"test_id": 35,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cheque",
			"dir": "fc",
			"amount": "15",
			"payments": [
				{
					"amount": 15,
					"aid": 1,
					"payer_name": "yossi yoss",
					"dir": "fc",
					"deposit_slip": "",
					"deposit_slip_bank": "",
					"source": "web"
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1,
					"dir": "fc"
				}
			}
		],
		"postTest": [],
		"expected": [
			{
				"dir": "fc",
				"method": "cheque",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 15
			}
		],
		"testRailId": 564
	}
	, {
		"description": "customer pay specific bill by record offline , payment with pays parameter in payments array",
		"test_id": 36,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "23.4",
			"payments": [
				{
					"dir": "fc",
					"aid": "1",
					"amount": "23.4",
					"pays": {
						"inv": {
							"amount": "23.4"
						}
					}
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "10",
					"payments": [
						{
							"dir": "tc",
							"amount": "10",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testLink": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 565
	}
	, {
		"description": "customer pay part of specific bill by record offline payment with specific transaction id(txid) , example : customer has 2 bills , 1st with debt of 50 and 2nd with debt of 20 and the customer want to pay  10 from the 2nd bill ",
		"test_id": 37,
		"api": "pay",
		"params": {
			"sid": "0",
			"aid": "1",
			"method": "cash",
			"dir": "fc",
			"amount": "5",
			"payments": [
				{
					"dir": "fc",
					"aid": "1",
					"amount": "5",
					"pays": {
						"inv": {
							"amount": "5"
						}
					}
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "10",
					"payments": [
						{
							"dir": "tc",
							"amount": "10",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testLink": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 566
	}
	, {
		"description": "customer cancel his payment by record cancel_payments ,the debt is paid by one payment",
		"test_id": 38,
		"api": "pay",
		"params": {
			"action": "cancel_payments",
			"cancellations": [
				{
					"txid": {
						"left": 0
					},
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				}
			],
			"sid": "0",
			"aid": "1",
			"method": "cash"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false
			}
		],
		"testRailId": 567
	}
	, {
		"description": "customer cancel his payment by record cancel_payments, the debt is paid by 2 payment",
		"test_id": 39,
		"api": "pay",
		"params": {
			"action": "cancel_payments",
			"cancellations": [
				{
					"txid": {
						"amount": 5
					},
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				}
			],
			"sid": "0",
			"aid": "1",
			"method": "cash"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "5",
					"payments": [
						{
							"dir": "fc",
							"amount": "5",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "10",
					"payments": [
						{
							"dir": "fc",
							"amount": "10",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 5,
				"total_paid": 10,
				"vatable_left_to_pay": 0,
				"paid": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": -5,
				"left": 0,
				"cancelled": true,
				"pending": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": -10,
				"left": 0
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 5,
				"due": 5,
				"left_to_pay": 5,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			}
		],
		"testRailId": 568
	}
	, {
		"description": "customer cancel his payment by record cancel_payments,+ ignore error =1, and pass 2 txid 1st exists and 2nd not",
		"test_id": 40,
		"api": "pay",
		"params": {
			"ignore_errors": "1",
			"action": "cancel_payments",
			"cancellations": [
				{
					"txid": {
						"left": 0
					},
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				},
				{
					"txid": "123456789",
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				}
			],
			"sid": "0",
			"aid": "1",
			"method": "cash"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false
			}
		],
		"testRailId": 569
	}
	, {
		"description": "customer cancel his payment by record cancel_payments api + ignore error =0, and pass 2 txid 1st exists and 2nd not",
		"test_id": 41,
		"api": "pay",
		"params": {
			"ignore_errors": "0",
			"action": "cancel_payments",
			"cancellations": [
				{
					"txid": {
						"left": 0
					},
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				},
				{
					"txid": "123456789",
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				}
			],
			"sid": "0",
			"aid": "1",
			"method": "cash"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"details.errors.0": "123456789 Not Found"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 0,
				"total_paid": 15,
				"paid": 1
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0
			}
		],
		"testRailId": 570
	}
	, {
		"description": "customer cancel his 'cancel'  bill  +  ignore error =1",
		"test_id": 42,
		"api": "pay",
		"params": {
			"action": "cancel_payments",
			"cancellations": [
				{
					"txid": {
						"cancel": {
							"$exists": 1
						}
					},
					"uf": {
						"payer_name": "Yossi",
						"reason_code": "4"
					}
				}
			],
			"sid": "0",
			"aid": "1",
			"method": "cash"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "15",
					"payments": [
						{
							"dir": "fc",
							"amount": "15",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"action": "cancel_payments",
					"cancellations": [
						{
							"txid": {
								"dir": "fc"
							},
							"uf": {
								"payer_name": "Yossi",
								"reason_code": "4"
							}
						}
					],
					"sid": "0",
					"aid": "1",
					"method": "cash"
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"testLink": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 0,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"uf.payer_name": "Yossi",
				"uf.reason_code": "4",
				"left_to_pay": 15,
				"total_paid": 0,
				"paid": false
			}
		],
		"testRailId": 571
	}
	, {
		"description": "retrieve all the invoices of the specific account ",
		"test_id": 43,
		"api": "bill",
		"params": {
			"action": "query_bills_invoices",
			"query": {
				"aid": 1
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T18:18:56.386Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "30.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.0.due": 23.4,
					"details.0.paid": 0,
					"details.1.due": 35.1,
					"details.1.paid": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15
			}
		],
		"testRailId": 572
	}
	, {
		"description": "retrieve specific invoice ",
		"test_id": 44,
		"api": "bill",
		"params": {
			"action": "query_bills_invoices",
			"query": {
				"invoice_id": {
					"due_before_vat": 20
				}
			}
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T18:18:56.386Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "30.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.0.due": 23.4,
					"details.0.paid": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 573
	}
	, {
		"description": "get the due balance of account ,account with due balance 0  ",
		"test_id": 45,
		"api": "bill",
		"params": {
			"action": "get_balances",
			"aids": 1
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T18:18:56.386Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-20"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": 0,
					"details.1.without_waiting": 0,
					"details.1.total_pending_amount": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 574
	}
	, {
		"description": "get the due balance of account ,account with due balance 0  ",
		"test_id": 46,
		"api": "bill",
		"params": {
			"action": "search_invoice",
			"aid": 1
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T18:18:56.386Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-20"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.balance.total": 0,
					"details.balance.without_waiting": 0,
					"details.balance.total_pending_amount": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 575
	}
	, {
		"description": "get the due balance of account, account with unpaid debt",
		"test_id": 47,
		"api": "bill",
		"params": {
			"action": "get_balances",
			"aids": 1
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": 23.4,
					"details.1.without_waiting": 23.4,
					"details.1.total_pending_amount": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 577
	}
	, {
		"description": "get the due balance of account, account with overpaid ",
		"test_id": 48,
		"api": "bill",
		"params": {
			"action": "get_balances",
			"aids": 1
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": -23.4,
					"details.1.without_waiting": -23.4,
					"details.1.total_pending_amount": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 578
	}
	, {
		"description": "get the due balance of 4 accounts, 1st account with overpaid 2nd account with paid debt 3rd account with unpaid debt 4th account with debt partially paid",
		"test_id": 49,
		"api": "bill",
		"params": {
			"action": "get_balances",
			"aids": "1,100,50,43"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "100",
					"step": "1",
					"cdrs": [
						{
							"aid": "100",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "100",
					"step": "1",
					"cdrs": [
						{
							"aid": "100",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "50",
					"step": "1",
					"cdrs": [
						{
							"aid": "50",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "43",
					"step": "1",
					"cdrs": [
						{
							"aid": "43",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "43",
					"step": "1",
					"cdrs": [
						{
							"aid": "43",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "-10.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": -23.4,
					"details.1.without_waiting": -23.4,
					"details.1.total_pending_amount": 0,
					"details.100.total": 0,
					"details.100.without_waiting": 0,
					"details.100.total_pending_amount": 0,
					"details.50.total": -23.4,
					"details.50.without_waiting": -23.4,
					"details.50.total_pending_amount": 0,
					"details.43.total": 11.7,
					"details.43.without_waiting": 11.7,
					"details.43.total_pending_amount": 0
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 579
	}
	, {
		"description": "account with debt ,the due date is on the future ",
		"test_id": 50,
		"api": "bill",
		"params": {
			"action": "collection_debt",
			"aids": [
				1
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "future",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details": []
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 580
	}
	, {
		"description": "account with debt ,the due date is on the past   ",
		"test_id": 51,
		"api": "bill",
		"params": {
			"action": "collection_debt",
			"aids": [
				1
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "past",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": 23.4,
					"details.1.aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 581
	}
	, {
		"description": "account with debt ,the due date is on the past   ",
		"test_id": 52,
		"api": "bill",
		"params": {
			"action": "collection_debt",
			"aids": [
				1
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "future",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "past",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": 23.4,
					"details.1.aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 582
	}
	, {
		"description": "in collection account with debt with past due date  ",
		"test_id": 53,
		"api": "bill",
		"params": {
			"action": "collection_debt",
			"aids": [
				1
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "past",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": 23.4,
					"details.1.aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": {
						"$in": [
							1,
							10
						]
					}
				}
			}
		],
		"expected": [],
		"testRailId": 583
	}
	, {
		"description": "retrieve debt of all accounts ",
		"test_id": 54,
		"api": "bill",
		"params": {
			"action": "all_collection_debts"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "10",
					"payments": [
						{
							"dir": "tc",
							"amount": "10",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "10",
					"method": "cash",
					"dir": "tc",
					"amount": "20",
					"payments": [
						{
							"dir": "tc",
							"amount": "20",
							"aid": "10"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.10.total": 20,
					"details.10.aid": 10,
					"details.1.total": 10,
					"details.1.aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": {
						"$in": [
							1,
							10
						]
					}
				}
			}
		],
		"expected": [],
		"testRailId": 584
	}
	, {
		"description": "retrieve debt of all accounts,1st account with debt ,2nd account without refund",
		"test_id": 55,
		"api": "bill",
		"params": {
			"action": "all_collection_debts"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"dir": "fc",
					"amount": "10",
					"payments": [
						{
							"dir": "fc",
							"amount": "10",
							"aid": "1"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "10",
					"method": "cash",
					"dir": "tc",
					"amount": "20",
					"payments": [
						{
							"dir": "tc",
							"amount": "20",
							"aid": "10"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.10.total": 20,
					"details.10.aid": 10,
					"details.1.total": null,
					"details.1.aid": null
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": {
						"$in": [
							1,
							10
						]
					}
				}
			}
		],
		"expected": [],
		"testRailId": 585
	}
	, {
		"description": "retrieve customer's debt  with debt with future due date ",
		"test_id": 56,
		"api": "bill",
		"params": {
			"action": "all_collection_debts"
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "onetimeinvoice",
					"aid": "1",
					"step": "1",
					"invoice_unixtime": "future",
					"cdrs": [
						{
							"aid": "1",
							"sid": "0",
							"rate": "CALL",
							"credit_time": "2021-03-18T17:18:56.385Z",
							"usagev": 1,
							"type": "credit",
							"aprice": "20.00"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"checkApiRespons": {
					"details.1.total": null,
					"details.1.aid": null
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 586
	}
	, {
		"description": "adjust customer payments",
		"test_id": 57,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 15,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"correction": true,
				"source": "web",
				"left_to_pay": 10,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			}
		],
		"testRailId": 587
	}
	, {
		"description": "adjust customer payments ,payment amount is positive adjust it to be negative amount",
		"test_id": 58,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"amount": 20
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 15,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"correction": true,
				"source": "web",
				"left_to_pay": 10,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			}
		],
		"testRailId": 588
	}
	, {
		"description": "adjust not existing payments",
		"test_id": 59,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": "Unknown",
					"amount": 30
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Unknown id"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false
			}
		],
		"testRailId": 589
	}
	, {
		"description": "adjust 2 payments ",
		"test_id": 60,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"amount": 25
				},
				{
					"id": {
						"amount": 20
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			},
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "20",
					"payments": [
						{
							"dir": "tc",
							"amount": "20",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": 20,
				"left_to_pay": 20,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"left": 15,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 25,
				"due": 25,
				"correction": true,
				"source": "web",
				"left_to_pay": 25,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"left": 20,
				"waiting_for_confirmation": false
			},
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 10,
				"due": 10,
				"correction": true,
				"source": "web",
				"left_to_pay": 10,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			}
		],
		"testRailId": 590
	}
	, {
		"description": "adjust 2 payments ",
		"test_id": 61,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"amount": 25
				},
				{
					"id": "Unknown",
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "GET",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"sid": "0",
					"aid": "1",
					"method": "cash",
					"dir": "tc",
					"amount": "15",
					"payments": [
						{
							"dir": "tc",
							"amount": "15",
							"aid": "1",
							"sid": "0"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Unknown id"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "tc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0
			}
		],
		"testRailId": 591
	}
	, {
		"description": "adjust method of payment + amount, original payment method is cashe adjust it to cheque",
		"test_id": 62,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"method": "cheque",
					"amount": 20
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cheque",
				"aid": 1,
				"type": "rec",
				"amount": 20,
				"due": -20,
				"payer_name": "yossi yoss",
				"correction": true,
				"source": "web",
				"left": 20,
				"deposit_slip_bank": "",
				"deposit_slip": "",
				"waiting_for_confirmation": false
			}
		],
		"testRailId": 592
	}
	, {
		"description": "adjust method of payment without adjust the amount, original payment method is cashe adjust it to cheque",
		"test_id": 63,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"method": "cheque"
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15,
				"cancelled": true,
				"pending": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": 15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left_to_pay": 15,
				"total_paid": 0,
				"vatable_left_to_pay": 0,
				"paid": false,
				"waiting_for_confirmation": false
			},
			{
				"dir": "fc",
				"method": "cheque",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"correction": true,
				"source": "web",
				"left": 15,
				"deposit_slip_bank": "",
				"deposit_slip": "",
				"waiting_for_confirmation": false
			}
		],
		"testRailId": 593
	}
	, {
		"description": "adjust method of payment to an undefined method",
		"test_id": 64,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"amount": 15
					},
					"method": "yossi"
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Illegal payment method yossi"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15
			}
		],
		"testRailId": 594
	}
	, {
		"description": "adjust  payments  without id in adjustments object",
		"test_id": 65,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"amoumt": 10
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Missing id"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15
			}
		],
		"testRailId": 595
	}
	, {
		"description": "adjust  payments  with empty id in adjustments object",
		"test_id": 66,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": "",
					"amoumt": 10
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Missing id"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15
			}
		],
		"testRailId": 596
	}
	, {
		"description": "adjust  payments  with id of Rejection bill in adjustments objectt",
		"test_id": 67,
		"api": "adjustpayments",
		"params": {
			"adjustments": [
				{
					"id": {
						"rejection_code": "342"
					},
					"amount": 10
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "Payment 0000000126975 not applicable"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [],
		"testRailId": 597
	}
	, {
		"description": "adjust  payments  with empty adjustments array",
		"test_id": 68,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{

				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			},
			{
				"checkApiRespons": {
					"message": "No adjustments found"
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15
			}
		],
		"testRailId": 598
	}
	, {
		"description": "adjust  payments  with id but without method and amount",
		"test_id": 69,
		"api": "adjustpayments",
		"params": {
			"aid": "1",
			"adjustments": [
				{
					"id": {
						"aid": 1
					}
				}
			]
		},
		"source": "api",
		"request_method": "POST",
		"preTest": [
			{
				"bulidAPI": {
					"api": "pay",
					"aid": "1",
					"method": "cash",
					"payments": [
						{
							"amount": 15,
							"aid": 1,
							"payer_name": "yossi yoss",
							"dir": "fc",
							"deposit_slip": "",
							"deposit_slip_bank": "",
							"source": "web"
						}
					]
				}
			}
		],
		"testFunctions": [
			{
				"testFields": {
					"aid": 1
				}
			}
		],
		"postTest": [
			{
				"cleanDB": {
					"aid": 1
				}
			}
		],
		"expected": [
			{
				"dir": "fc",
				"method": "cash",
				"aid": 1,
				"type": "rec",
				"amount": 15,
				"due": -15,
				"payer_name": "yossi yoss",
				"source": "web",
				"left": 15
			}
		],
		"testRailId": 599
	}






]

